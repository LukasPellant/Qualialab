Co se pořád děje (aneb proč ex = ‑2, ey = ‑1)
findPath() v grid.ts očekává souřadnice už v mřížce (0 – 63), ale voláš ho stále
se světovými (X‑Z) souřadnicemi kolem nuly.
Proto je cílové pole záporné → mimosíťové → „Path not found“.

Ověření (rychlý test v kódu)
ts
Copy
Edit
console.log('worker world', from.x, from.z, 'target world', to.x, to.z);
Uvidíš stejné hodnoty, jaké pak po Math.floor končí jako ‑2, ‑1 …

Oprava: jasný převod world → grid
Cílový stav: všechna volání findPath posílají grid souřadnice.

1️⃣ Vytvoř utilitu se správným offsetem
text
Copy
Edit
> Vytvoř @./src/utils/coords.ts:
  import { GRID_SIZE } from '../utils/grid';
  const CELL_SIZE = 1;              // pokud 1 world‑unit = 1 tile
  const HALF = GRID_SIZE / 2;       // mapa je centrovaná v (0,0)

  export const worldToGrid = (x:number, z:number) => [
    Math.floor(x / CELL_SIZE + HALF),
    Math.floor(z / CELL_SIZE + HALF)
  ];

  export const gridToWorld = (gx:number, gy:number) => [
    (gx - HALF + 0.5) * CELL_SIZE,
    (gy - HALF + 0.5) * CELL_SIZE
  ];
(Pokud tvá mapa není centrovaná, změň HALF na libovolný ORIGIN_OFFSET_X/Y.)

2️⃣ Použij převod v PathSystem.ts
text
Copy
Edit
> Uprav @./src/systems/PathSystem.ts:
  - import { worldToGrid } from '../utils/coords';
  - Před voláním findPath():
      const [sx, sy] = worldToGrid(worker.x, worker.z);
      const [ex, ey] = worldToGrid(target.x, target.z);
      const path = findPath({ x: sx, z: sy }, { x: ex, z: ey });
(Žádné další změny grid.ts nejsou nutné – ten už pracuje v grid souřadnicích.)

3️⃣ Stejný převod při blokování dlaždic
Kdekoliv voláš setBlocked(x, z) s world souřadnicemi (např. při stavbě budovy),
přidej převod:

ts
Copy
Edit
const [gx, gy] = worldToGrid(building.x, building.z);
setBlocked(gx, gy, 1);