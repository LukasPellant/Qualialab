Cíle sprintu
Vybalancovat ekonomiku (jasné sazby produkce/spotřeby, soft capy, storage).

Vylepšit budovy o navazující upgrady (Farm ↔ Fields/Mill, Mine ↔ Shaft/Smelter, Houses ↔ Tavern/Shrine).

Přidat Tržiště (základ dynamických cen, směna zdrojů).

Upevnit základy: job sloty, re-pathing, UI pro náklady/bonusy, testy.

1) Balancing – zdroje & populace
Cílové tempo (orientačně, na 1 assignovaného workera):

Food: +3/min (Farm), spotřeba Worker: −1.2/min (čistý přebytek ~1.8/min).

Wood: +2/min (Forest), regrowth lesa: +12/min do zásoby (cap per forest).

Stone: +1.2/min (Mine).

Gold: zatím jen z Tržiště (pro začátek, + události později).

Mechaniky:

Každá budova má job slots (Farm 2, Mine 2, Forest 2; upgrade to mění).

Jeden job = cyklus cycleTime (s) a yield (surovina/částky).

Storage: Town Hall 500/typ, Warehouse (nová) +300/typ. Přes cap → výroba se pauzne.

Auto-recruit zůstává, ale naváže se na food ≥ 60 + net food > 0.8/min.

Změny ve store (Zustand):

buildings[].jobs: {max, assigned}

rates: {foodPerMin, woodPerMin, stonePerMin, consumptionPerMin} (odvozené, pro HUD).

Testy (Jest):

5 min sim při 1 Farm + 1 Worker ⇒ food roste ≥ 8.

Při plném storage se produkce pauzne do uvolnění místa.

2) Upgrady budov („přístavby“)
Upgrady jsou připojené k parent budově, stojí zdroje, mění parametry (multiplikátory), mohou zabrat sousední políčko (blok do pathfindingu).

Farm
Fields (Pole): +1 job slot, Farm yield ×1.25.
Cost: 30 wood, 10 stone; BuildTime: 30 s.

Mill (Mlýn): Farm cycleTime ×0.8, přidá pasivní +0.5 food/min.
Cost: 40 wood, 20 stone, 10 gold.

Mine
Shaft (Šachta): Mine yield ×1.3, ale cycleTime ×1.1 (hlouběji, těžší).
Cost: 25 wood, 35 stone.

Smelter (Huť): 1 job slot „smelt“ (převod stone→gold pomalu), vyžaduje 1 wood/cyklus jako palivo.
Cost: 50 wood, 30 stone, 20 gold.

Housing
Tavern (Hospoda): +1 idle growth šance (náhodný přírůstek 1 villager za 5–10 min, když je přebytek jídla), zvedá happiness (hook do budoucna).
Cost: 40 wood, 10 stone, 10 gold.

Shrine (Svatiňka): −10 % spotřeba food na domácnost (globální modifikátor na consumptionPerMin).
Cost: 20 wood, 20 stone.

UI:

V panelu budovy nová záložka Upgrades: karta s názvem, popisem, cenou, tlačítko Build (disabled pokud chybí zdroje/sousední místo).

Testy:

Aktivace Fields zvýší farmYield ≥ 1.2×.

Smelter při nedostatku wood → pauzne smelting job, nepadá.

3) Tržiště (Market v1)
Funkce: koupit/prodat wood/stone/food za gold podle dynamické ceny.
Cena (jednoduchý model):
price(resource) = base * (1 + α * (demand - supply)/cap)

base: wood = 1, stone = 2, food = 1.5; α = 0.4, cap = 200.

Nákup i prodej posouvají supply/demand (vrací se k base pomalu: decay −10 % směrem k 0/30 s).

UI: panel s tlačítky ±1/±5/±20, aktuální cenou a náhledem dopadu na zásoby.
Budova: Market (stavba) odemyká panel; bez ní jen read-only ceny.

Testy:

Opakovaný nákup stejné komodity zvýší cenu; interval bez transakcí ji vrátí k base.

4) Poladit Path/Jobs
Re-path triggers: při umístění budovy/upgrade vyvolej re-path všem workerům s aktivní cestou, pokud jejich další uzel je nově blokovaný.

Slot priority: TaskSystem přiřazuje práci do budov, kde assigned < max.

Fail-safe: Worker po 3 sek. bez posunu → auto re-path k cíli.

5) Datové tabulky (JSON)
Zaveď content/buildings.json a content/upgrades.json (jediný zdroj pravdy pro náklady/bonusy).
Příklad (zkráceně):

json
Copy
Edit
// buildings.json
{"farm":{"jobs":2,"base":{"yield":3,"cycle":60},"cost":{"wood":20}},
 "mine":{"jobs":2,"base":{"yield":1.2,"cycle":60},"cost":{"wood":20,"stone":20}}}

// upgrades.json
{"farm:fields":{"parent":"farm","mods":{"jobs:+":1,"yield:x":1.25},"cost":{"wood":30,"stone":10}},
 "farm:mill":{"parent":"farm","mods":{"cycle:x":0.8,"foodPassive:+":0.5},"cost":{"wood":40,"stone":20,"gold":10}}}
6) UI úpravy (MUI)
HUD: přidej net rates (šípky ↑↓ a hodnoty /min).

Panel budovy: sekce Workers (assign/unassign), Upgrades, Storage (aktuální/plný).

Market dialog: přístup z Town Hall a z nové budovy Market.

7) Plán pro Cursor (komitní kroky)
content: přidej buildings.json, upgrades.json, loader, validace.

systems: přidej job slots, multiplikátory, storage cap stop/start.

market: implementuj cenu, decay, buy/sell akce, UI dialog.

path: re-path triggers + fail-safe.

ui: Upgrades tab + net rates v HUD, Market dialog.

tests: Jest pro balance (5 min sim), storage cap, market price decay.

docs: krátké BALANCING.md s cílovými čísly a jak je měnit.

Akceptace sprintu:

10 min hry bez micromanagementu → zásoby nekmitají, populace roste o 1–2.

Postavené Fields a Mill znatelně zlepší food ekonomiku.

Market funguje (cena roste při nákupech, klesá v čase).

Žádné zaseklé cesty po dostavbě budov.